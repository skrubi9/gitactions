name: reusable deploy

on:
    workflow_call:
        inputs: 
            env:
                required: true
                type: string

jobs:
    print-env:
        runs-on: ubuntu-latest
        steps:
            - name: Printer
              run: echo "Env is ${{ inputs.env }}"

    # call design spinnaker pipeline
    auto-call-design:
        environment: general
        runs-on: ubuntu-latest
        if: ${{inputs.env == 'design' }}
        steps:
            - name: call-design-test-step
              run: |
                curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITKEY }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/skrubi9/gitactions/actions/workflows/75288276/dispatches -d '{"ref":"main","inputs":{"start-pipeline":"run"}}'
        needs: 
            - print-env

    ## merge changes from design -> staging
    ## call staging spinnaker pipeline
    auto-call-issue-creation:
        environment: general 
        runs-on: ubuntu-latest
        if: ${{inputs.env == 'staging' }}
        steps:
            - uses: actions/checkout@master
            - name: Merge design -> staging
              uses: devmasx/merge-branch@master
              with:
                type: now
                target_branch: staging
                message: Merge design into staging
                github_token: ${{ secrets.GITKEY }}
            - name: call-production-deploy-step
              run: |
                curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITKEY }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/skrubi9/gitactions/actions/workflows/75705440/dispatches -d '{"ref":"main","inputs":{"start-pipeline":"run"}}'
        needs: 
        - print-env

    ## merge changes from staging -> production
    ## call production spinnaker pipeline
    do-production-deploy:
        runs-on: ubuntu-latest
        if: ${{inputs.env == 'production' }}
        steps:
            - name: Merge staging -> production
              uses: devmasx/merge-branch@master
              with:
                type: now
                target_branch: production
                message: Merge staging into production
                github_token: ${{ secrets.GITKEY }}
            - name: do-prod-deploy
              run: echo "DO PROD DEPLOY"
        needs:
            - print-env
